{"version":3,"sources":["components/analog-clock-container/analog-clock-container.styles.js","components/node/node.styles.js","components/node/node.component.js","components/analog-clock-container/analog-clock-container.component.js","App.js","index.js"],"names":["HandStyled","css","ClockBorderStyle","borderColor","borderWidth","ClockContainerStyled","styled","div","size","backgroundColor","border","centerNodeColor","centerNodeSize","HandSecond","secondHandWidth","secondHandLength","secondHandColor","secondRatio","HandMinute","minuteHandWidth","minuteHandLength","minuteHandColor","minuteRatio","HandHour","hourHandWidth","hourHandLength","hourHandColor","hourRatio","NodeContainer","position","ThickNode","hourMarksWidth","hourMarksHeight","hourMarksColor","MinuteNodeContainer","ThinNode","minuteMarksWidth","minuteMarksHeight","minuteMarksColor","Node","hour","renderHourMarks","renderMinuteMarks","Array","from","e","i","key","AnalogClockContainer","props","useState","rotationPosition","setRotationPosition","useEffect","setClock","currentDate","Date","getSeconds","getMinutes","getHours","setInterval","defaultProps","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.231645aa.chunk.js","sourcesContent":["import styled, { css } from 'styled-components';\r\n\r\nconst HandStyled = css`\r\n    position: absolute;\r\n    bottom: 50%;\r\n    left: 50%;\r\n    border-top-left-radius: 10px;\r\n    border-top-right-radius: 10px;\r\n    transform-origin: bottom;\r\n`;\r\n\r\nconst ClockBorderStyle = css`\r\n    border-style: solid;\r\n    border-color: ${(({borderColor}) => borderColor)};\r\n    border-width: ${(({borderWidth}) => borderWidth)}px;\r\n`;\r\n\r\nexport const ClockContainerStyled = styled.div`\r\n    width: ${(({size}) => size)}px;\r\n    height: ${(({size}) => size)}px;\r\n    background-color: ${(({backgroundColor}) => backgroundColor)};\r\n    border-radius: 50%;\r\n    position: relative;\r\n    ${ClockBorderStyle};\r\n    border: ${(({border}) => border? '' : 'none')};\r\n\r\n    &::after {\r\n        content: '';\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        background-color: ${(({centerNodeColor}) => centerNodeColor)};\r\n        height: ${(({centerNodeSize}) => centerNodeSize)}px;\r\n        width: ${(({centerNodeSize}) => centerNodeSize)}px;\r\n        transform: translate(-50%, -50%);\r\n        border-radius: 50%;\r\n    }\r\n`;\r\n\r\nexport const HandSecond = styled.div`\r\n    ${HandStyled};\r\n    width: ${(({secondHandWidth}) => secondHandWidth)}px;\r\n    height: ${(({secondHandLength}) => secondHandLength)}%;\r\n    background-color: ${(({secondHandColor}) => secondHandColor)};\r\n    transform: translateX(-50%) rotate(${({secondRatio}) => secondRatio*360}deg);\r\n`;\r\n\r\nexport const HandMinute = styled.div`\r\n    ${HandStyled};\r\n    width: ${(({minuteHandWidth}) => minuteHandWidth)}px;\r\n    height: ${(({minuteHandLength}) => minuteHandLength)}%;\r\n    background-color: ${(({minuteHandColor}) => minuteHandColor)};\r\n    transform: translateX(-50%) rotate(${({minuteRatio}) => minuteRatio*360}deg);\r\n`;\r\n\r\nexport const HandHour = styled.div`\r\n    ${HandStyled};\r\n    width: ${(({hourHandWidth}) => hourHandWidth)}px;\r\n    height: ${(({hourHandLength}) => hourHandLength)}%;\r\n    background-color: ${(({hourHandColor}) => hourHandColor)};\r\n    transform: translateX(-50%) rotate(${({hourRatio}) => hourRatio*360}deg);\r\n`\r\n\r\n","import styled from 'styled-components';\r\n\r\n\r\nexport const NodeContainer = styled.div`\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: center;\r\n    transform: rotate(${({position}) => position*30}deg);\r\n    color: white;\r\n`;\r\n\r\nexport const ThickNode = styled.div`\r\n    height: ${(({hourMarksWidth}) => hourMarksWidth)}px;\r\n    width: ${(({hourMarksHeight}) => hourMarksHeight)}px;\r\n    background-color:  ${(({hourMarksColor}) => hourMarksColor)};\r\n    position: absolute;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n`;\r\n\r\nexport const MinuteNodeContainer = styled.div`\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: center;\r\n    transform: rotate(${({position}) => position*30+position*6}deg);\r\n    color: white;\r\n`;\r\n\r\nexport const ThinNode = styled.div`\r\n    height: ${(({minuteMarksWidth}) => minuteMarksWidth)}px;\r\n    width: ${(({minuteMarksHeight}) => minuteMarksHeight)}px;\r\n    background-color:  ${(({minuteMarksColor}) => minuteMarksColor)};\r\n    position: absolute;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n`;","import React from 'react';\r\n\r\nimport { NodeContainer, ThickNode, MinuteNodeContainer, ThinNode } from './node.styles';\r\n\r\nconst Node = ({ \r\n    hour, renderHourMarks, renderMinuteMarks,\r\n    hourMarksColor, hourMarksWidth, hourMarksHeight,\r\n    minuteMarksColor, minuteMarksWidth, minuteMarksHeight,\r\n    }) => {\r\n    return (\r\n        <NodeContainer position={hour}>\r\n            {Array.from(Array(5), (e, i) => {\r\n                if (i === 0 && renderHourMarks) \r\n                    return (\r\n                        <ThickNode\r\n                            key={i}\r\n                            hourMarksColor={hourMarksColor}\r\n                            hourMarksWidth={hourMarksWidth}\r\n                            hourMarksHeight={hourMarksHeight}\r\n                        />\r\n                    )\r\n                if (i !== 0 && renderMinuteMarks) \r\n                    return (\r\n                        <MinuteNodeContainer position={i} key={i}>\r\n                            <ThinNode\r\n                                minuteMarksColor={minuteMarksColor}\r\n                                minuteMarksHeight={minuteMarksHeight}\r\n                                minuteMarksWidth={minuteMarksWidth}\r\n                            />\r\n                        </MinuteNodeContainer>\r\n                    )\r\n                return null;\r\n            })}\r\n         \r\n        </NodeContainer>\r\n    );\r\n}\r\nexport default Node;","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {  ClockContainerStyled,\r\n          HandHour,\r\n          HandMinute,\r\n          HandSecond        \r\n} from './analog-clock-container.styles';\r\nimport Node from '../node/node.component';\r\n\r\nconst AnalogClockContainer = (props) => {\r\n    const [rotationPosition, setRotationPosition] = useState({secondRatio: 0, minuteRatio: 0, hourRatio: 0});\r\n\r\n    const { secondRatio, minuteRatio, hourRatio } = rotationPosition;\r\n    \r\n    useEffect(() => {\r\n        const setClock = () => {\r\n            const currentDate = new Date();\r\n            const secondRatio = currentDate.getSeconds() / 60;\r\n            const minuteRatio = (secondRatio + currentDate.getMinutes()) / 60;\r\n            const hourRatio = (minuteRatio + currentDate.getHours()) / 12;\r\n        \r\n            setRotationPosition({\r\n                secondRatio,\r\n                minuteRatio,\r\n                hourRatio\r\n            })\r\n        }\r\n\r\n        setInterval(setClock, 1000);\r\n        setClock();\r\n    }, []);\r\n\r\n    return (\r\n        <ClockContainerStyled\r\n            size={props.size}\r\n            border={props.border}\r\n            borderColor={props.borderColor}\r\n            borderWidth={props.borderWidth}\r\n            centerNodeColor={props.centerNodeColor}\r\n            centerNodeSize={props.centerNodeSize}\r\n            backgroundColor={props.backgroundColor}\r\n        >\r\n            <HandHour \r\n                hourRatio={hourRatio}\r\n                hourHandColor={props.hourHandColor}\r\n                hourHandLength={props.hourHandLength}\r\n                hourHandWidth={props.hourHandWidth}\r\n            />\r\n            <HandMinute\r\n                minuteRatio={minuteRatio}\r\n                minuteHandColor={props.minuteHandColor}\r\n                minuteHandLength={props.minuteHandLength}\r\n                minuteHandWidth={props.minuteHandWidth}\r\n            />\r\n            <HandSecond secondRatio={secondRatio}\r\n                 secondHandColor={props.secondHandColor}\r\n                 secondHandLength={props.secondHandLength}\r\n                 secondHandWidth={props.secondHandWidth}\r\n            />\r\n\r\n            {Array.from(Array(12), (e, i) => (\r\n                <Node key={i} hour={i} \r\n                    renderHourMarks={props.renderHourMarks}\r\n                    renderMinuteMarks={props.renderMinuteMarks}\r\n                    hourMarksColor={props.hourMarksColor}\r\n                    hourMarksWidth={props.hourMarksWidth}\r\n                    hourMarksHeight={props.hourMarksHeight}\r\n                    minuteMarksColor={props.minuteMarksColor}\r\n                    minuteMarksWidth={props.minuteMarksWidth}\r\n                    minuteMarksHeight={props.minuteMarksHeight}\r\n                />\r\n            ))}\r\n     \r\n        </ClockContainerStyled>\r\n    );\r\n}\r\n\r\nexport default AnalogClockContainer;\r\n\r\n\r\nAnalogClockContainer.propTypes = {\r\n    size : PropTypes.number, //in pixels \r\n    border: PropTypes.bool,\r\n    backgroundColor: PropTypes.string,\r\n    centerNodeColor: PropTypes.string,\r\n    centerNodeSize: PropTypes.number,\r\n    borderColor: PropTypes.string,\r\n    borderWidth: PropTypes.number, //in pixels\r\n    hourHandLength: PropTypes.number, //in %,\r\n    hourHandWidth: PropTypes.number, //in pixels,\r\n    hourHandColor : PropTypes.string,\r\n    minuteHandLength: PropTypes.number, //in %,\r\n    minuteHandWidth: PropTypes.number, //in pixels,\r\n    minuteHandColor : PropTypes.string,\r\n    secondHandLength: PropTypes.number, //in %,\r\n    secondHandWidth: PropTypes.number, //in pixels,\r\n    secondHandColor : PropTypes.string,\r\n    renderMinuteMarks: PropTypes.bool,\r\n    renderHourMarks: PropTypes.bool,\r\n    hourMarksColor: PropTypes.string,\r\n    hourMarksWidth: PropTypes.number, //in pixels\r\n    hourMarksHeight: PropTypes.number, //in pixels\r\n    minuteMarksColor: PropTypes.string,\r\n    minuteMarksWidth: PropTypes.number, //in pixels\r\n    minuteMarksHeight: PropTypes.number //in pixels\r\n}; \r\n\r\nAnalogClockContainer.defaultProps = {\r\n    size: 300,\r\n    backgroundColor: 'rgba(0, 0, 0, .8)',\r\n    border: true,\r\n    centerNodeColor: 'white',\r\n    centerNodeSize: 20,\r\n    borderColor: '#5f5f5f',\r\n    borderWidth: 10,\r\n    hourHandLength: 30,\r\n    hourHandWidth: 12,\r\n    hourHandColor: 'rgba(255, 255, 255, .8)',\r\n    minuteHandLength: 39,\r\n    minuteHandWidth: 8,\r\n    minuteHandColor: 'grey',\r\n    secondHandLength: 46,\r\n    secondHandWidth: 3,\r\n    secondHandColor: 'red',\r\n    renderMinuteMarks: true,\r\n    renderHourMarks: true,\r\n    hourMarksColor: 'white',\r\n    hourMarksWidth: 8,\r\n    hourMarksHeight: 10,\r\n    minuteMarksColor: '#7b7b7b',\r\n    minuteMarksWidth: 4,\r\n    minuteMarksHeight: 4,\r\n};","import React from 'react';\r\nimport AnalogClockContainer from './components/analog-clock-container/analog-clock-container.component';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className='app-container'>\r\n            <div className='clock-container'>\r\n                <AnalogClockContainer\r\n                    size={250}\r\n                    borderWidth={8}\r\n                    hourHandWidth={8}\r\n                    minuteHandWidth={5}\r\n                />\r\n            </div>\r\n            <div className='clock-container'>\r\n                <AnalogClockContainer\r\n                    size={250}\r\n                    borderWidth={0}\r\n                    hourHandWidth={8}\r\n                    minuteHandWidth={5}\r\n                    backgroundColor={'#444434'}\r\n                    borderColor={'#444434'}\r\n                    secondHandColor={'#676757'}\r\n                    centerNodeColor={'#ee864a'}\r\n                    hourHandColor={'white'}\r\n                    minuteHandColor={'white'}\r\n                    renderMinuteMarks={false}\r\n                    renderHourMarks={false}\r\n                />\r\n            </div>\r\n            <div className='clock-container'>\r\n                <AnalogClockContainer\r\n                    size={250}\r\n                    backgroundColor={'#242e50'}\r\n                    borderWidth={8}\r\n                    borderColor={'#242e50'}\r\n                    hourHandWidth={8}\r\n                    minuteHandWidth={5}\r\n                    hourMarksWidth={3}\r\n                    hourMarksHeight={12}\r\n                    minuteMarksWidth={2}\r\n                    minuteMarksHeight={5}\r\n                />\r\n            </div>\r\n            <div className='clock-container'>\r\n                <AnalogClockContainer\r\n                    size={250}\r\n                    backgroundColor={'white'}\r\n                    centerNodeColor={'black'}\r\n                    hourHandColor={'#d0d0d0'}\r\n                    minuteHandColor={'#d0d0d0'}\r\n                    borderWidth={8}\r\n                    borderColor={'#242e50'}\r\n                    hourHandWidth={8}\r\n                    minuteHandWidth={5}\r\n                    hourMarksWidth={3}\r\n                    hourMarksHeight={12}\r\n                    hourMarksColor={'black'}\r\n                    renderMinuteMarks={false}\r\n                />\r\n            </div>\r\n            <div className='clock-container'>\r\n                <AnalogClockContainer\r\n                    size={250}\r\n                    backgroundColor={'#1d123a'}\r\n                    centerNodeColor={'white'}\r\n                    hourHandColor={'#d0d0d0'}\r\n                    minuteHandColor={'#d0d0d0'}\r\n                    borderWidth={8}\r\n                    borderColor={'#1d123a'}\r\n                    hourHandWidth={8}\r\n                    minuteHandWidth={5}\r\n                    hourMarksWidth={3}\r\n                    hourMarksHeight={12}\r\n                    hourMarksColor={'white'}\r\n                    renderMinuteMarks={false}\r\n                />\r\n            </div>\r\n            <div className='clock-container'>\r\n                <AnalogClockContainer\r\n                    size={250}\r\n                    backgroundColor={'white'}\r\n                    centerNodeColor={'black'}\r\n                    hourHandColor={'#d0d0d0'}\r\n                    minuteHandColor={'#d0d0d0'}\r\n                    borderWidth={12}\r\n                    borderColor={'#f1921d'}\r\n                    hourHandWidth={8}\r\n                    minuteHandWidth={5}\r\n                    hourMarksWidth={3}\r\n                    hourMarksHeight={12}\r\n                    hourMarksColor={'black'}\r\n                    minuteMarksWidth={2}\r\n                    minuteMarksHeight={5}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}